var(x)
var(arg)
var(arg,weight)
plot(arg,weight)
q()
getwd()
q()
help.start()
install.package("vcd")
install.packages("vcd")
library(vcd)
library(grid)
library(vcd)
help(Arthritis)
Arthritis
example(Arthritis)
q()
library(TTR)
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
demo?
?
1
demo()
demo(quantmod)
demo(zoo)
?demo()
demo(charSeries)
demo(charSeries,'quantmod')
demo("charSeries,"quantmod")
demo("charSeries","quantmod")
demo(lm.gm,package = "stats")
demo(lm.glm,package = "stats")
demo(chartSeries,package = "quantmod")
x<-c(4,TRUE)
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
z<-cbind(x,y)
w<-1
clear()
x<-list(2,"a","b",TRUE)
x[[1]]
x <- 1:4
y <- 2:3
x+y
z <- x+y
x <- c(3,5,1,10,12,6)
y <- (3,5,1,10,12,6)
y <- i(3,5,1,10,12,6)
c()?
;
?c()
y <- vector(3,5,1,10,12,6)
x[x<6] <- 0
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
int count
Ozone
hw1_data
hw1_data.Ozone
hw1_data[Ozone}
hw1_data[Ozone]
View(hw1_data)
x <- c("Ozone")
x
head(hw1_data[x])
summary(hw1_data[x])
mycount <- function{x,na.omit = TRUE}{}
mycount <- function{x,na.omit = TRUE}{
mycount <- function(x,na.omit = TRUE){
if(na.omit){}
;
mycount <- function(x,na.omit = TRUE){
if(na.omit){}
mycount <- function(x,na.omit = TRUE){
if(na.omit) y <- x[!is.na(x)]
m <- mean(y)
return m}
mycount <- function(x,na.omit = TRUE){
+ if(na.omit) y <- x[!is.na(x)]
+ m <- mean(y)
return c(m)}
mycount <- function(x,na.omit = TRUE){
if(na.omit)
x<-x[!is.na(x)]
m <- mean(x)
return(c(mean=m))
}
sapply(hw1_data[x],mycount)
mycount <- function(x){
x={"Ozone","Month"}
x=c("Ozone","Month")
mycount <- function(x){
if(x[2]==5)
x<-x[1]
m <- mean(x)
return (c(mean=m))
}
sapply(hw1_data[x],mycount)
mycount <- function(x){
if(x[2]==5)
x<-x
m <- mean(x)
+ return (c(mean=m))
+ }
> sapply(hw1_data[x],mycount)
mycount <- function(x){
+ if(x[2]==5)
+ x<-x
+ m <- mean(x)
return (c(mean=m))
}
sapply(hw1_data,mycount)
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
mydata <-dataframe(hw1_data)
mydata <-data.frame(hw1_data)
View(mydata)
newdata <-mydata[which(mydata$Ozone >31 & mydata$Temp>90 )]
newdata <-mydata[which(mydata.Ozone >31 & mydata.Temp>90 )]
newdata <-mydata[which(mydata["Ozone"] >31 & mydata["Temp]>90 )]
newdata <-mydata[which(mydata["Ozone"] >31 & mydata["Temp"]>90 )]
newdata <-mydata[which(mydata$Ozone >31 & mydata$Temp>90 )ï¼Œ]
newdata <-mydata[which(mydata$Ozone >31 & mydata$Temp>90 ),]
summary(newdata["Solar.R"])
newdata <-mydata[which(mydata$Month =6),]
newdata <-mydata[which(mydata$Month ==6),]
summary(newdata["Temp"])
newdata <-mydata[which(mydata$Month ==5),]
summary(newdata["Ozone"])
cube <- function(x,n){}
cube <- function(x,n){
x^3}
cube(3)
x<- 1:10
if(x>5){x <-0 }
x
if((x>5)){x <- 0}
clear()
delete()
f <- function(x){
g <- function(y){
y+z}
z <- 4
x +g(x)}
z <- 10
f(3)
x <- 5
y <- if(x<3){
NA} else {}
x <- 5
y <- if(x<3){
NA } else {10}
q()
pollutantmean <- function(diretory, polluction, id = 1: 332)
help.start()
pol <- function(string dir){
pol <- function(dir){
pol <- function(dir,id 1:332){
pol <- function(dir,id = 1:332){
dir <-"/Users/9zai/Desktop/specdata"
read.table(dir+id)}
pol <- function(dir,id = 1:332){
read.table(dir+id)}
pol("/Users/9zai/Desktop/specdata/")
vm("pol")
rm("pol")
pol <- function(dir){
read.table("/Users/9zai/Desktop/specdata/")
read.table("/Users/9zai/Desktop/specdata")
read.table("/Users/9zai/Desktop/specdata/001.csv")
q()
q()
library("swirl")
library
library("swirl")
clear()
clear?
?clear
??clear
install.package("swirl")
install.packages("swirl")
library("swirl")
swirl()
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?c
z
c(z,555)
info()
c(z,555,z)
z*2+100
my_sqrt <- z-1
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
skip()
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+100
skip()
my_div
library("swirl")
swirl()
quit()
library("swirl)
library("swirl")
swirl()
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
req(0,times=40)
rep(0,times=40)
my_test <- rep(0,times=40)
length(my_test)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
x <- c(44,NA,5,NA)
3*x
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
.na(my_data)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_na
my_data
0/0
Inf - Inf
x <-4L
class(x)
x <- c(4,"a",TRUE)
class(x)
x <- c(1,3,5)
y<- c(3,2,10)
cbind(x,y)
z <- cbind(x,y)
x <- list(2,"a","b",TRUE)
x[[1]]
x
x <- 1:4
y <-2
x+y
x <- c(3,5,1,10,12,6)
x[x>6] <- 0
x <- c(3,5,1,10,12,6)
x[x==0]<6
x[ x %in% 1:5]<6
x[ x %in% 1:5] <-0
hw1_data <- read.csv("~/Desktop/hw1_data.csv")
View(hw1_data)
hw1_data[1]
is.na(hw1_data[1])
sum(is.na(hw1_data[1]))
mean?
?mean
mean(hw1_data[1])
mean(hw1_data[1],trim=0,TRUE)
mean(hw1_data[1],trim=0,na.rm = TRUE)
mean(hw1_data[1],0,TRUE)
mean(hw1_data[1],na.rm = TRUE)
x <- hw1_data[1]
x <- c(hw1_data[1])
mean(x,na.rm = TRUE)
?lapply
lapply(x,mean)
colmeans(hw1_data,na.rm =T)
?colmeans
?colMeans
colMeans(hw1_data,na.rm =T)
hw1_data[hw1_data[1]>31 & hw1_data[4]>90]
hw1_data[2][hw1_data[1]>31 & hw1_data[4]>90]
z <- hw1_data[2][hw1_data[1]>31 & hw1_data[4]>90]
means(z,na.rm =T)
mean(z,na.rm =T)
z <- hw1_data[4][hw1_data[5] = 6]
z <- hw1_data[4][hw1_data[5] == 6]
mean(z)
z <- hw1_data[1][hw1_data[5] == 5]
max(z)
max(z,na.rm =T)
setwd("User/9zai")
getwd()
setwd("/User/9zai/desktop/program_1")
setwd(/User/9zai/desktop/program_1)
setwd(/"User/9zai/desktop/program_1")
setwd("/User/9zai/desktop/program_1")
cannot change working di
library(dataset)
library(datasets)
data(iris)
?iris
view(iris)
?view
??view
View(iris)
data <- iris[iris$'Species'="virginica"]
data <- iris[iris$'Species'=="virginica"]
data <- iris[iris$Species=="virginica"]
data <- iris[iris['Species']=="virginica"]
data
data <- matrix(iris[iris['Species']=="virginica"],ncol=5)
data
mean(data[1])
?colnames
colnames(data)<- c("Sepal.length","Sepal.Width","Petal.Length","Petal,Width","Species")
data
mean(data["Speal.Length"])
l_data <- c(iris[iris['Sepal.Length'],iris['Species']=="virginica"])
l_data <- c(iris[,iris['Species']=="virginica"])
l_data <- c(iris[iris['Species']=="virginica"])
l_data <- data['Sepal.Length']
l_data
l_data <- c(data['Sepal.Length'])
data
l_data <- v(data['Sepal.Length'])
l_data <- list(data['Sepal.Length'])
l_data <- c(data['Sepal.Length',,,])
l_data <- c(data['Sepal.Length',,,,])
data$'Sepal.Length'
data@'Sepal.Length'
data['Sepal.Length']
data['Sepal.length']
data[1]
data[col=1]
?matrix
?getcol
??getcol
data[1,:]
data[1,:]
data[:,1,:]
data[:,1]
data[:,3]
?XF
data[c(1)]
data[c(1),:]
data
data[:,1]
data[1:50,1]
l_data <-c(data[1:50,1])
?setClass
mean(l_data)
l_data <- as.numeric(l_data)
mean(l_data)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],3,mean)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
View(mtcars)
?tapply
tapply(mtcars$hp,mtcars$cyl,mean)
m <- tapply(mtcars$hp,mtcars$cyl,mean)
m
m[3] - m[1]
209.21429 - 82.63636
debug(ls)
ls
ls()
Q
set.seed(1)
?rprios(5,2)
?rprios
?rpios
?rpios()
rpios(5,2)
?rpios
??rpios
?rops
?rios
?rpois
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
??norm
?rnorm
?set.seed
?rnorm
set.seed(10)
x <- rep(0:1,each =0.5)
x <- rep(0:1,each =5)
e <- rnorm(10,0,20)
y <- 0.5 + 2*x +e
library(datasets)
system.time()
?system.time()
?str
setwd("Users/9zai/desktop/program_3")
getwd()
setwd("Users/9zai/desktop")
setwd("Users/9zai/desktop/program_3")
setwd("Users/9zai/desktop/program_3")
?setwd
setwd("Users/9zai")
help()
help.start()
install.packages("vcd")
help(package="vcd")
libary(vcd)
library(vcd)
help(Arthritis)
Arthritis
example(Arithritis)
example(Arthritis)
q()
a <- c(1:20)
rnam <- c("a","b","c","d")
cnam <- c("A","B","C","D","E")
a_matrix <- matrix(a,nrow=4,ncol=5,byrow= TRUE,dimnames=list(rnam,cnam))
a_matrix
a <- c(seq(0,1,by = 0.5))
a
a <- c(seq(1,0,by = 0.5))
source('~/.active-rstudio-document')
dose <- c(20,30,40,45,60)
drugA <- c(16,20,27,40,60)
drugB <- c(15,18,25,31,40)
plot(dose,drugA,type="b")
dose <- c(20,30,40,45,60)
drugA <- c(16,20,27,40,60)
drugB <- c(15,18,25,31,40)
plot(dose,drugA,type="b")
plot(dose,drugA)
help(plot)
plot(dose,drugA,type ="l")
plot(dose,drugA,type ="h")
help(plotmatch)
help(plotmath)
train <- read.csv("~/Desktop/competition/Titanic/train.csv")
View(train)
?ggplot
library(ggplot)
packages("ggplot")
?df
install.pages("ggplots")
install.packages("ggplots")
install.packages("ggplot2")
library(ggplot2)
setwd("/Users/9zai/Desktop/competition/Titanic/")
library(ggplot2)
library(randomForest)
train <- read.csv("train.csv",header = TRUE)
test <- read.csv("test.csv",header = TRUE)
view(train)
View(train)
?mean
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
setwd("/Users/9zai/Desktop/competition/Titanic/")
library(ggplot2)
library(randomForest)
train <- read.csv("train.csv",header = TRUE)
test <- read.csv("test.csv",header = TRUE)
#clean the variables first
extraFeatures <- function(data){
features <- c("Pclass","Sex","Age","Fare","Sibsp","Parch","Embarked")
val <- data[,features]
val$Age[is.na(val$Age)] = mean(val$Age,na.rm =T)
val$Fare[is.na(val$Fare)] = median(val$Fare,na.rm = T)
val$Embarked[val$Embarked=="" ] = "S"
val$Sex <- as.factor(val$Sex)
val$Embarked <- as.factor(val$Embarked)
return(val)
}
my_forest <- randomForest(extraFeatures(train),as.factor(trian$Survived),ntree = 100,importance = T)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Desktop/competition/Titanic/Random Forest.R')
source('~/Desktop/competition/Titanic/Random Forest.R')
setwd("/Users/9zai/Desktop/competition/Titanic/")
library(ggplot2)
library(randomForest)
train <- read.csv("train.csv",header = TRUE, stringsAsFactors = F)
test <- read.csv("test.csv",header = TRUE,stringsAsFactors = F)
#clean the variables first
extraFeatures <- function(data){
features <- c("Pclass","Sex","Age","Fare","SibSp","Parch","Embarked")
val <- data[,features]
val$Age[is.na(val$Age)] = mean(val$Age,na.rm =T)
val$Fare[is.na(val$Fare)] = median(val$Fare,na.rm = T)
val$Embarked[val$Embarked=="" ] = "S"
val$Sex <- as.factor(val$Sex)
val$Embarked <- as.factor(val$Embarked)
return(val)
}
my_forest <- randomForest(extraFeatures(train),as.factor(train$Survived),ntree = 100,importance = T)
my_sol <- data.frame(PassengerId = test$PassengerId)
my_sol$Survived <- predict(my_forest,extraFeatures(test))
write.csv(my_sol,file = "my_sol.csv", row.names = FALSE)
